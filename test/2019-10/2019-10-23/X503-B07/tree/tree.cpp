/*
  CraZYali 真的非常非常帅气
ンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンンりりしンし子子りししンンンンンンンンンンンンンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンンンンンンンンンンンンンり子子京雄明京手京雄京手手り子りりりしンンンンンンンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンンンンンンンンンンしりり手蜀輸輸輸輸蜀雄蜀輸輸蜀雄明明京京京りしンンンンンンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンンンンンンしり蜀輸輸輸置輸輸輸輸輸輸輸輸輸輸輸輸輸輸輸輸蜀蜀京手しンンンンンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンンンンンり京明輸輸輸置輸輸輸置置輸置置輸輸輸輸置輸輸輸輸輸輸蜀雄京りンンンンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンンンンン京蜀輸輸輸置輸輸輸置置輸置置置置置置輸置置置置輸輸輸輸輸蜀明手ンンンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンンし手雄輸輸輸輸輸輸輸輸輸輸輸輸置置置置置置置置置置置置置置置輸置輸輸手りンンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンン京雄輸輸置輸輸輸輸輸輸輸輸輸輸輸輸置置置置置置置置置置置置置輸置輸輸明子りンンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンり輸輸輸置輸輸輸輸輸輸輸輸輸輸輸置置置置置置置置置置置置置置置置置輸輸蜀明手りンンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンン京蜀輸輸輸輸輸輸輸輸輸輸置置輸輸輸輸輸置置置置置置置置置置置置置置輸置輸輸輸蜀京りンンンンンンンンンンンンン
ンンンンンンンンンンンンンンンし蜀輸輸輸輸輸輸輸輸置置輸置輸輸輸輸輸輸置置置置置置置輸輸輸輸置置置置輸置輸輸輸雄子りンンンンンンンンンンンン
ンンンンンンンンンンンンンンり雄輸輸輸輸輸輸輸輸輸輸置輸置輸輸輸輸輸輸輸輸輸輸輸輸輸輸輸輸輸輸輸置置輸輸輸輸置輸京りンンンンンンンンンンンン
ンンンンンンンンンンンンンン輸輸輸輸輸輸輸輸輸輸輸輸輸蜀蜀蜀雄雄蜀蜀輸輸蜀蜀輸輸輸蜀蜀蜀蜀蜀輸輸輸置置置置置置置蜀明子ンンンンンンンンンンン
ンンンンンンンンンンンンンン輸輸輸輸輸輸輸輸蜀蜀輸輸輸蜀蜀蜀雄雄蜀蜀輸蜀蜀蜀蜀蜀蜀雄蜀蜀蜀蜀蜀蜀輸輸輸輸置置置置輸蜀京ンンンンンンンンンンン
ンンンンンンンンンンンンン子蜀輸輸輸輸輸輸蜀蜀蜀輸輸輸蜀蜀雄京明雄蜀蜀蜀蜀蜀蜀蜀蜀雄蜀雄雄雄雄蜀輸輸輸輸置置置置置輸京ンンンンンンンンンンン
ンンンンンンンンンンンり京輸輸輸輸置輸輸蜀蜀雄蜀蜀蜀輸雄雄雄手手京京京京京蜀蜀蜀雄明京京京京京雄雄雄雄雄輸輸置置置置輸しンンンンンンンンンン
ンンンンンンンンンンン手輸置輸置置置輸蜀蜀雄明明雄雄蜀明雄明手子り手手手手蜀蜀蜀雄京手子手手京明雄明明明蜀輸輸置置置輸りンンンンンンンンンン
ンンンンンンンンンンン明輸輸輸輸輸輸蜀雄雄京京明明雄雄京京手りりり子子子京明雄雄京手子り子子京京京京京京明蜀輸置置置輸りンンンンンンンンンン
ンンンンンンンンンンし蜀輸輸置輸輸蜀京京手京京京京京京り子りりりりりりりり子子子りりりり子子子手手手手手京京明蜀置置置手ンンンンンンンンンン
ンンンンンンンンンンし輸輸置置輸蜀雄京手手手手手手手手りりりりりりりりりりりりりりりりり子子子手手手手手手京京雄置置置京ンンンンンンンンンン
ンンンンンンンンンンし輸輸置置輸蜀雄手手手手子子子子子子りりりりりりりりりりりりりりりり子子子子手手手手手手京京輸置置明りンンンンンンンンン
ンンンンンンンンンンり輸置輸輸蜀蜀明京手手手手手子手子子りりりりりりりりりりりりりりりりり子子手手手手手手手京京雄蜀置雄りンンンンンンンンン
ンンンンンンンンンンり輸置置蜀雄雄明京京手手手手子子子りりりりりりりりりりりりりりりりりり子子子手手手手手京京京雄蜀輸雄りンンンンンンンンン
ンンンンンンンンンンり輸置置蜀雄雄京京手手手手手子子子りりりりりりりりりりりりりりりりりりり子子子手手手京京京京雄雄輸蜀りンンンンンンンンン
ンンンンンンンンンンり輸輸輸雄京京京京京手子子手手手手子子子子りりりりりりりりり子子子子子子手手手京手手京京京京京明蜀雄しンンンンンンンンン
ンンンンンンンンンンり輸輸蜀明京京京京京手手京京京明明明京京京手子子子りりりり子手手京京明明雄雄明京京京京京京京京明蜀明しンンンンンンンンン
ンンンンンンンンンンり輸輸蜀明京京京京手手京京明雄蜀蜀蜀蜀雄明京京手子子子子子手京京京雄雄蜀蜀蜀蜀雄雄明京京京京京明雄明しンンンンンンンンン
ンンンンンンンンンンン蜀輸蜀京京京京京京京明明明雄雄蜀蜀蜀蜀蜀蜀雄京京手子手京京雄雄蜀蜀蜀蜀蜀雄雄雄明雄雄明京京京京明京しンンンンンンンンン
ンンンンンンンンンンン明輸雄京京京京京京明蜀明手手京京京明蜀輸蜀雄明京京手京京京蜀蜀輸置置輸輸輸輸輸輸輸置置輸雄京京雄手しンンンンンンンンン
ンンンンンンンンンンン京輸蜀京京雄輸輸輸雄京京京子子子京明雄雄蜀輸輸輸輸蜀蜀輸蜀蜀雄雄雄雄雄手手手京京京明京京蜀置置輸子ンンンンンンンンンン
ンンンンンンンンンンン手輸蜀蜀輸置輸京京明京京京京京京京京明雄雄明明蜀輸雄雄輸輸明雄雄明京京京明明京京京明明京京輸輸蜀りンンンンンンンンンン
ンンンンンンンンンンン子蜀蜀蜀雄蜀輸京明明明雄雄蜀蜀蜀蜀蜀雄明明明明蜀雄京京雄輸明雄明京雄蜀蜀輸蜀蜀雄雄明雄明京置京雄しンンンンンンンンンン
ンンンンンンンンンンンり蜀蜀雄京明蜀明雄明蜀蜀輸輸置置輸輸蜀明京京雄輸輸蜀雄蜀置明京京雄輸輸輸置輸蜀蜀蜀雄雄明京輸明明ンンンンンンンンンンン
ンンンンンンンンンンンり明蜀京京京蜀明明雄蜀輸輸輸輸置輸蜀蜀雄京手蜀輸蜀京京雄輸雄京京蜀蜀雄輸輸蜀蜀蜀蜀雄雄明明輸明雄ンンンンンンンンンンン
ンンンンンンンンンンンンり雄明京京雄京京京京京京京京京手子子手手手輸蜀京りり子京蜀手京手手手京京京京京京京京京京京京京ンンンンンンンンンンン
ンンンンンンンンンンンンり京明京京京明京手手手手手手手手手手手京手輸明りりりり京輸京京京京京京京京手手手手手京京京京京りンンンンンンンンンン
ンンンンンンンンンンンンンり明京京京明手子手手手手京京京手手手京京蜀京りりりり手輸雄京手京京京京京京京手子子京雄京京京京子しンンンンンンンン
ンンンンンンンンンンンりりり京雄雄京明雄明京京京手手手手手手雄雄蜀手子りりりり子京雄雄蜀蜀明京京京京明雄蜀明京京手京京雄雄りンンンンンンンン
ンンンンンンンンンンン京京京京明明明京明京蜀蜀蜀蜀蜀蜀蜀蜀京雄蜀雄子りりりりりり子京明明明京京京京京京京明京京手手手京蜀雄子ンンンンンンンン
ンンンンンンンンンンり蜀蜀雄京京明京京京京京京京京京京京京京明雄明手子りりりりり手京京京京京京京京京京京京京京京京京京雄雄りンンンンンンンン
ンンンンンンンンンンり蜀蜀蜀京京京京京京京明京京京京京京京明雄明手子子子りり子子手手京雄明明明京京京京京京京京京京京京雄京しンンンンンンンン
ンンンンンンンンンンり蜀蜀雄京京京京京京京雄雄明明明明明明雄雄京子子手手子子手京京京子明明明明明明京京京京京京京京京京雄りンンンンンンンンン
ンンンンンンンンンンし雄雄明京京京京京京明雄雄明京京京京京京京子り手京京京京京京京京手京京京京京京京京京京明明明明京京京しンンンンンンンンン
ンンンンンンンンンンンり京京雄京京京京京京京京手子子子子子子京京雄輸輸蜀雄雄雄蜀輸輸雄京子子子子子子手京京明明明明京明ンンンンンンンンンンン
ンンンンンンンンンンンしり京京京京京京京京京京手子子子子子子手明蜀輸輸輸蜀蜀蜀蜀輸輸蜀明子り子子子子手手京明明明明京明ンンンンンンンンンンン
ンンンンンンンンンンンンり手京京京京明京京京京手手手手子子り手明蜀輸蜀蜀蜀蜀雄雄蜀蜀蜀雄手り子子手手手京京明明明明京京ンンンンンンンンンンン
ンンンンンンンンンンンンンり京京京明明明明京京京手手手子子子り子京明京京京雄雄雄雄雄明京手子子子手手京京京明明明京京りンンンンンンンンンンン
ンンンンンンンンンンンンンし明京京京明明明京京京京手手子子りりりり手手手手京明明京京京京子子手手手京京京京京明明京明りンンンンンンンンンンン
ンンンンンンンンンンンンンン手京京京明明明京京京京京手子子子子子子手子子子京京手京京手京手手手手手京京京京京明明明京りンンンンンンンンンンン
ンンンンンンンンンンンンンしり子京京明明明明京京京京京手手京京京手子手手手子子手京手京京京京京京京京京京京京明京京手ンンンンンンンンンンンン
ンンンンンンンンンンンンンンり手京京明明明明明京京京京京京京京京京京明明明京京明雄明京京京京京京京京京京京明明明京りしンンンンンンンンンンン
ンンンンンンンンンンンンンンしりり京明明明明明京京京京京京京京京明蜀蜀蜀雄雄雄蜀蜀蜀蜀明明明京京京京京京明明明明京りしンンンンンンンンンンン
ンンンンンンンンンンンンンンンンンり明雄雄明明明京京京明雄蜀蜀輸輸輸輸蜀蜀輸輸蜀蜀輸蜀輸輸蜀雄明京京京京明明京明手りりしししンンンンンンンン
ンンンンンンンンンンンンンンンンンし明明雄雄明明明京京雄雄蜀輸輸輸明京京京明明明明明雄輸蜀蜀雄雄明京明明明明京京りりりりししンンンンンンンン
ンンンンンンンンンンンンンンンンンン明明雄雄雄雄明明明雄雄雄雄雄明京京手手京京京京京明雄雄雄雄雄明明明明明明京京りりりりりししンンンンンンン
ンンンンンンンンンンンンンンンンンン子明雄雄雄雄雄雄雄雄雄雄京京明雄蜀蜀蜀蜀蜀蜀雄雄雄明明明雄雄雄明明明明明京京子りりりりりしししンンンンン
ンンンンンンンンンンンンンンンンンンり京雄雄雄雄雄雄雄雄雄明明雄雄蜀蜀蜀蜀蜀蜀蜀蜀蜀雄雄明明雄雄雄明明明明明京手手りりりりりしししンンンンン
ンンンンンンンンンンンンンンンンンンしし京蜀蜀雄雄雄雄雄雄雄明雄雄蜀蜀蜀蜀蜀蜀蜀雄雄雄雄雄明雄雄雄雄明明京京京手子子子りりりりしししンンンン
ンンンンンンンンンンンンンンンンンンンンり雄雄蜀雄雄雄雄雄雄明明明明明明明明京京明明明明明明明明雄明明明京手手手手手子りりりりりりしししンン
ンンンンンンンンンンンンンンンンンンンしし明雄雄雄蜀雄雄雄明明明明京京京京京京京京京京京明明明明雄明雄明京手手手手手手子りりりりりしししンン
ンンンンンンンンンンンンンンンンンンししし京雄雄蜀蜀蜀雄雄明京京京京京京京京京京京京京京明明雄雄雄雄雄明京手手手手手手子子りりりりしししンン
ンンンンンンンンンンンンンンンンンンンしし京雄蜀蜀蜀蜀蜀蜀雄明明明京明明明明明明明明明明明明雄雄雄雄雄明京手手手手手手子子子りりりりしししン
ンンンンンンンンンンンンンンンンンンンしし京蜀蜀蜀蜀蜀蜀蜀蜀雄雄雄明明雄雄雄雄雄雄雄雄雄雄雄雄雄雄雄雄明京手手手手手手子子子りりりりしししン
ンンンンンンンンンンンンンンンンンンンしし京雄蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀雄雄雄雄雄雄雄雄雄雄京手手手手手手手手子りりりりりししン
ンンンンンンンンンンンンンンンンンンンしし京雄蜀輸輸輸輸輸輸蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀雄雄雄京京京京手手手手手子子りりりりりしし
ンンンンンンンンンンンンンンンンンンししし京雄蜀輸輸輸輸輸輸蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀蜀雄雄雄京京京京京京手手手子子りりりりりしし
*/

/***************************************************************
	File name: tree.cpp
	Author: ljfcnyali
	Create time: 2019年10月23日 星期三 09时36分56秒
***************************************************************/
#include<bits/stdc++.h>

using namespace std;

#define REP(i, a, b) for ( int i = (a), _end_ = (b); i <= _end_; ++ i ) 
#define mem(a) memset ( (a), 0, sizeof ( a ) ) 
#define str(a) strlen ( a ) 
#define pii pair<int, int>
#define int long long
typedef long long LL;

const int maxn = 200010;

int n, w[maxn], Begin[maxn], Next[maxn], To[maxn], e;
int f[maxn], g[maxn], cnt, id[maxn], anc[maxn][20], dis[maxn];
int tot1, tot2, tot3, size[maxn], block, pos[maxn], VAL;
int sum, S[maxn], dfn[maxn], tot, W[maxn], num, ret, ID[maxn];
long double ans[maxn];
bool vis[maxn];
struct node
{
    int opt, u, v, w;
} q[maxn];
struct node1 { int u, w; } a[maxn];
struct node2 
{ 
    int l, r, t, id; 
    bool operator < (const node2 &x) const 
    {
        return pos[l] < pos[x.l] || (pos[l] == pos[x.l] && (pos[r] < pos[x.r] || (pos[r] == pos[x.r] && t < x.t)));
    }
} b[maxn], c[maxn];

inline void add(int u, int v) { To[++ e] = v; Next[e] = Begin[u]; Begin[u] = e; }

inline void DFS(int u)
{
    dfn[u] = ++ tot; ID[tot] = u; size[u] = 1;
    f[u] = ++ cnt; id[cnt] = u;
    for ( int i = Begin[u]; i; i = Next[i] ) 
    {
        int v = To[i];
        anc[v][0] = u; dis[v] = dis[u] + 1;
        DFS(v);
        size[u] += size[v];
    }
    g[u] = ++ cnt; id[cnt] = u;
}

inline int LCA(int x, int y)
{
    if ( dis[x] < dis[y] ) swap(x, y);
    for ( int j = 18; j >= 0; -- j ) if ( dis[anc[x][j]] >= dis[y] ) x = anc[x][j];
    if ( x == y ) return x;
    for ( int j = 18; j >= 0; -- j ) if ( anc[x][j] != anc[y][j] ) { x = anc[x][j]; y = anc[y][j]; }
    return anc[x][0];
}

inline void add(int x)
{
    if ( !W[x] ) { vis[x] ^= 1; return ; }
    if ( vis[x] ) 
    { 
        -- S[W[x]]; 
        if ( !S[W[x]] ) { sum -= W[x]; -- num; ret -= W[x] * W[x]; }
    }
    else 
    {
        ++ S[W[x]];
        if ( S[W[x]] == 1 ) { sum += W[x]; ++ num; ret += W[x] * W[x]; }
    }
    vis[x] ^= 1;
}

inline void Modify(int pos, int w)
{
    if ( vis[pos] ) { add(pos); W[pos] = w; add(pos); }
    else W[pos] = w;
}

namespace Subtask1 
{
    inline void main()
    {
        block = pow(n, 2.0 / 3);
        a[++ tot1].u = 1; a[tot1].w = VAL;
        REP(i, 1, n)
        {
            pos[i] = (i - 1) / block;
            if ( q[i].opt == 1 ) 
            {
                a[++ tot1].u = q[i].u; a[tot1].w = q[i].w;
                continue ;
            }
            if ( q[i].opt == 2 ) continue ;
            int u = q[i].u;
            c[++ tot3].l = dfn[u]; c[tot3].r = dfn[u] + size[u] - 1;
            c[tot3].t = tot1; c[tot3].id = i;
        }
        sort(c + 1, c + tot3 + 1);
        int L = 0, R = 0, T = 1;
        REP(i, 1, tot3)
        {
            while ( T <= c[i].t ) { Modify(a[T].u, a[T].w); ++ T; }
            while ( T > c[i].t ) { Modify(a[T].u, 0); T --; }
            while ( L < c[i].l ) { add(ID[L]); ++ L; }
            while ( L > c[i].l ) { -- L; add(ID[L]); }
            while ( R < c[i].r ) { ++ R; add(ID[R]); }
            while ( R > c[i].r ) { add(ID[R]); -- R; }
            long double x = sum * 1.0 / num; 
            ans[c[i].id] = (ret + x * x * num - 2 * sum * x) / num;
        }
    }
}

namespace Subtask2
{
    inline void main()
    {
        mem(vis); mem(S); sum = num = ret = 0;
        REP(i, 1, tot1) W[a[i].u] = a[i].w;
        block = pow(cnt, 2.0 / 3);
        REP(i, 1, cnt) pos[i] = (i - 1) / block;
        REP(i, 1, n) 
        {
            if ( q[i].opt != 2 ) continue ;
            int u = q[i].u, v = q[i].v;
            if ( f[u] > f[v] ) swap(u, v);
            b[++ tot2].l = LCA(u, v) == u ? f[u] : g[u]; 
            b[tot2].r = f[v]; b[tot2].id = i;
        }
        sort(b + 1, b + tot2 + 1);
        int L = 1, R = 0; 
        REP(i, 1, tot2)
        {
            while ( L < b[i].l ) { add(id[L]); ++ L; }
            while ( L > b[i].l ) { -- L; add(id[L]); }
            while ( R < b[i].r ) { ++ R; add(id[R]); }
            while ( R > b[i].r ) { add(id[R]); -- R; }
            int x = id[L], y = id[R], t = LCA(x, y);
            if ( x != t && y != t ) add(t);
            long double X = sum * 1.0 / num; 
            ans[b[i].id] = (ret + X * X * num - 2 * sum * X) / num;
            if ( x != t && y != t ) add(t);
        }
    }
}

signed main()
{
    freopen("tree.in", "r", stdin);
    freopen("tree.out", "w", stdout);
    scanf("%lld%lld", &n, &VAL);
    REP(i, 1, n) 
    {
        scanf("%lld", &q[i].opt);
        if ( q[i].opt == 1 )
        {
            int x, y, f; scanf("%lld%lld%lld", &x, &y, &f);
            add(f, x); q[i].u = x; q[i].w = y;
        }
        else if ( q[i].opt == 2 ) scanf("%lld%lld", &q[i].u, &q[i].v);
        else scanf("%lld", &q[i].u);
    }
    dis[1] = 1; DFS(1);
    REP(j, 1, 18) REP(i, 1, n) anc[i][j] = anc[anc[i][j - 1]][j - 1];
    Subtask1 :: main();
    Subtask2 :: main();
    REP(i, 1, n) if ( q[i].opt != 1 ) printf("%Lf\n", ans[i]);
    return 0;
}
